package org.tuubes.craft.mc1_12_2.play.clientbound

import SetPassengersPacketBuilder._
import com.electronwill.niol.{NiolInput, NiolOutput}
import org.tuubes.craft.CraftAttach
import org.tuubes.core.network._

/** Packet class auto-generated by DataTractor */
final class SetPassengersPacket(var entityId: Int, var passengers: Array[Int]) extends Packet {
  override def write(out: NiolOutput): Unit = {
    out.putVarint(entityId)
    out.putVarint(passengers.length)
    var i_passengers = 0
    while (i_passengers < passengers.length) {
      out.putVarint(passengers(i_passengers))
      i_passengers += 1
    }
  }
	
  override def id = SetPassengersPacket.id

	
}
object SetPassengersPacket extends PacketObj[CraftAttach, SetPassengersPacket] {
  override val id = 67
	
  override def read(in: NiolInput): SetPassengersPacket = {
    val entityId = in.getVarint()
    val passengersLength = in.getVarint()
    var i_passengers = 0
    val passengers = new Array[Int](passengersLength)
    while (i_passengers < passengersLength) {
      passengers(i_passengers) = in.getVarint()
      i_passengers += 1
    }
    new SetPassengersPacket(entityId, passengers)
  }
}
/** Packet builder auto-generated by DataTractor */
final class SetPassengersPacketBuilder[P <: SetPassengersPacket] extends PacketBuilder[SetPassengersPacket, P =:= Complete] {
  private[this] var entityId: Int = _
  private[this] var passengers: Array[Int] = _

  def withEntityId(entityId: Int): SetPassengersPacketBuilder[P with EntityId] = {
    this.entityId = entityId
    this.asInstanceOf[SetPassengersPacketBuilder[P with EntityId]]
  }

  def withPassengers(passengers: Array[Int]): SetPassengersPacketBuilder[P with Passengers] = {
    this.passengers = passengers
    this.asInstanceOf[SetPassengersPacketBuilder[P with Passengers]]
  }

  override def build()(implicit evidence: P =:= Complete) = {
    new SetPassengersPacket(entityId, passengers)
  }
}
object SetPassengersPacketBuilder {
  sealed trait EntityId
  sealed trait Passengers
  type Complete = SetPassengersPacket with EntityId with Passengers
}
