package org.tuubes.craft.mc1_12.play.serverbound

import com.electronwill.niol.{NiolInput, NiolOutput}
import org.tuubes.core.network._
import org.tuubes.craft.CraftAttach
import KeepAlivePacketBuilder._

/** Packet class auto-generated by DataTractor */
final class KeepAlivePacket(var keepAliveId: Int) extends Packet[CraftAttach] {
  override def write(out: NiolOutput): Unit = {
    out.putVarint(keepAliveId)
  }
	
  override def obj = KeepAlivePacket

	
}
object KeepAlivePacket extends PacketObj[CraftAttach, KeepAlivePacket] {
  override val id = 12
	
  override def read(in: NiolInput): KeepAlivePacket = {
    val keepAliveId = in.getVarint()
    new KeepAlivePacket(keepAliveId)
  }
}
/** Packet builder auto-generated by DataTractor */
final class KeepAlivePacketBuilder[P <: KeepAlivePacket] extends PacketBuilder[KeepAlivePacket, P =:= Complete] {
  private[this] var keepAliveId: Int = _

  def withKeepAliveId(keepAliveId: Int): KeepAlivePacketBuilder[P with KeepAliveId] = {
    this.keepAliveId = keepAliveId
    this.asInstanceOf[KeepAlivePacketBuilder[P with KeepAliveId]]
  }

  override def build()(implicit evidence: P =:= Complete) = {
    new KeepAlivePacket(keepAliveId)
  }
}
object KeepAlivePacketBuilder {
  sealed trait KeepAliveId
  type Complete = KeepAlivePacket with KeepAliveId
}
