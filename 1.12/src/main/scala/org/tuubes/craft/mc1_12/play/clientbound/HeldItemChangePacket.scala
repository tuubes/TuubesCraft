package org.tuubes.craft.mc1_12.play.clientbound

import com.electronwill.niol.{NiolInput, NiolOutput}
import org.tuubes.core.network._
import HeldItemChangePacketBuilder._
import org.tuubes.craft.CraftAttach

/** Packet class auto-generated by DataTractor */
final class HeldItemChangePacket(var slot: Byte) extends Packet[CraftAttach] {
  override def write(out: NiolOutput): Unit = {
    out.putByte(slot)
  }
	
  override def obj = HeldItemChangePacket

	
}
object HeldItemChangePacket extends PacketObj[CraftAttach, HeldItemChangePacket] {
  override val id = 57
	
  override def read(in: NiolInput): HeldItemChangePacket = {
    val slot = in.getByte()
    new HeldItemChangePacket(slot)
  }
}
/** Packet builder auto-generated by DataTractor */
final class HeldItemChangePacketBuilder[P <: HeldItemChangePacket] extends PacketBuilder[HeldItemChangePacket, P =:= Complete] {
  private[this] var slot: Byte = _

  def withSlot(slot: Byte): HeldItemChangePacketBuilder[P with Slot] = {
    this.slot = slot
    this.asInstanceOf[HeldItemChangePacketBuilder[P with Slot]]
  }

  override def build()(implicit evidence: P =:= Complete) = {
    new HeldItemChangePacket(slot)
  }
}
object HeldItemChangePacketBuilder {
  sealed trait Slot
  type Complete = HeldItemChangePacket with Slot
}
