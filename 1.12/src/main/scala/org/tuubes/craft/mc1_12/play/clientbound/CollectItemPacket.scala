package org.tuubes.craft.mc1_12.play.clientbound

import org.tuubes.network._
import com.electronwill.niol.{NiolInput, NiolOutput}

/** Packet class auto-generated by DataTractor */
final class CollectItemPacket(var collectedEntityId: Int, var collectorEntityId: Int, var pickupItemCount: Int) extends Packet {
  override def write(out: NiolOutput): Unit = {
    out.putVarint(collectedEntityId)
    out.putVarint(collectorEntityId)
    out.putVarint(pickupItemCount)
  }
	
  override def obj = CollectItemPacket

	
}
object CollectItemPacket extends PacketObj[CollectItemPacket] {
  override val id = 74
	
  override def read(in: NiolOutput): CollectItemPacket = {
    val collectedEntityId = in.getVarint()
    val collectorEntityId = in.getVarint()
    val pickupItemCount = in.getVarint()
    new CollectItemPacket(collectedEntityId, collectorEntityId, pickupItemCount)
  }
}
/** Packet builder auto-generated by DataTractor */
final class CollectItemPacketBuilder[P <: CollectItemPacket] extends PacketBuilder[CollectItemPacket, Complete] {
  private[this] var collectedEntityId: Int = _
  private[this] var collectorEntityId: Int = _
  private[this] var pickupItemCount: Int = _

  def withCollectedEntityId(collectedEntityId: Int): CollectItemPacketBuilder[P with CollectedEntityId] = {
    this.collectedEntityId = collectedEntityId
    this.asInstanceOf[CollectItemPacketBuilder[P with CollectedEntityId]]
  }

  def withCollectorEntityId(collectorEntityId: Int): CollectItemPacketBuilder[P with CollectorEntityId] = {
    this.collectorEntityId = collectorEntityId
    this.asInstanceOf[CollectItemPacketBuilder[P with CollectorEntityId]]
  }

  def withPickupItemCount(pickupItemCount: Int): CollectItemPacketBuilder[P with PickupItemCount] = {
    this.pickupItemCount = pickupItemCount
    this.asInstanceOf[CollectItemPacketBuilder[P with PickupItemCount]]
  }

  override def build()(implicit evidence: P =:= Complete) = {
    new CollectItemPacket(collectedEntityId, collectorEntityId, pickupItemCount)
  }
}
object CollectItemPacketBuilder {
  sealed trait CollectedEntityId
  sealed trait CollectorEntityId
  sealed trait PickupItemCount
  type Complete = CollectItemPacketBuilder with CollectedEntityId with CollectorEntityId with PickupItemCount
}
