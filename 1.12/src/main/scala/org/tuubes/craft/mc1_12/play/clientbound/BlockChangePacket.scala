package org.tuubes.craft.mc1_12.play.clientbound

import com.electronwill.utils.Vec3i
import com.electronwill.niol.{NiolInput, NiolOutput}
import BlockChangePacketBuilder._
import org.tuubes.core.network._
import org.tuubes.craft.CraftAttach

/** Packet class auto-generated by DataTractor */
final class BlockChangePacket(var location: Long, var blockId: Int) extends Packet[CraftAttach] {
  override def write(out: NiolOutput): Unit = {
    out.putLong(location)
    out.putVarint(blockId)
  }
	
  override def obj = BlockChangePacket

  def vecLocation: Vec3i = {
    val x = location >> 38
    val y = (location >> 26) & 0xfff
    val z = location << 38 >> 38
    new Vec3i(x, y, z)
  }	
}
object BlockChangePacket extends PacketObj[CraftAttach, BlockChangePacket] {
  override val id = 11
	
  override def read(in: NiolInput): BlockChangePacket = {
    val location = in.getLong()
    val blockId = in.getVarint()
    new BlockChangePacket(location, blockId)
  }
}
/** Packet builder auto-generated by DataTractor */
final class BlockChangePacketBuilder[P <: BlockChangePacket] extends PacketBuilder[BlockChangePacket, P =:= Complete] {
  private[this] var location: Long = _
  private[this] var blockId: Int = _

  def withLocation(location: Long): BlockChangePacketBuilder[P with Location] = {
    this.location = location
    this.asInstanceOf[BlockChangePacketBuilder[P with Location]]
  }

  def withLocation(v: Vec3i): BlockChangePacketBuilder[P with Location] = {
    this.location = ((v.x & 0x3ffffff) << 38) | ((v.y & 0xfff) << 26) | (v.z & 0x3ffffff)
    this.asInstanceOf[BlockChangePacketBuilder[P with Location]]
  }

  def withBlockId(blockId: Int): BlockChangePacketBuilder[P with BlockId] = {
    this.blockId = blockId
    this.asInstanceOf[BlockChangePacketBuilder[P with BlockId]]
  }

  override def build()(implicit evidence: P =:= Complete) = {
    new BlockChangePacket(location, blockId)
  }
}
object BlockChangePacketBuilder {
  sealed trait Location
  sealed trait BlockId
  type Complete = BlockChangePacket with Location with BlockId
}
