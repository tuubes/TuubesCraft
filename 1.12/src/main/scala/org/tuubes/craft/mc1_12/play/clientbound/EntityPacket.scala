package org.tuubes.craft.mc1_12.play.clientbound

import EntityPacketBuilder._
import com.electronwill.niol.{NiolInput, NiolOutput}
import org.tuubes.craft.CraftAttach
import org.tuubes.core.network._

/** Packet class auto-generated by DataTractor */
final class EntityPacket(var entityId: Int) extends Packet[CraftAttach] {
  override def write(out: NiolOutput): Unit = {
    out.putVarint(entityId)
  }
	
  override def obj = EntityPacket

	
}
object EntityPacket extends PacketObj[CraftAttach, EntityPacket] {
  override val id = 37
	
  override def read(in: NiolInput): EntityPacket = {
    val entityId = in.getVarint()
    new EntityPacket(entityId)
  }
}
/** Packet builder auto-generated by DataTractor */
final class EntityPacketBuilder[P <: EntityPacket] extends PacketBuilder[EntityPacket, P =:= Complete] {
  private[this] var entityId: Int = _

  def withEntityId(entityId: Int): EntityPacketBuilder[P with EntityId] = {
    this.entityId = entityId
    this.asInstanceOf[EntityPacketBuilder[P with EntityId]]
  }

  override def build()(implicit evidence: P =:= Complete) = {
    new EntityPacket(entityId)
  }
}
object EntityPacketBuilder {
  sealed trait EntityId
  type Complete = EntityPacket with EntityId
}
