package org.tuubes.craft.mc1_12.play.clientbound

import com.electronwill.niol.{NiolInput, NiolOutput}
import java.nio.charset.StandardCharsets.UTF_8
import DisconnectPacketBuilder._
import org.tuubes.core.network._
import org.tuubes.craft.CraftAttach

/** Packet class auto-generated by DataTractor */
final class DisconnectPacket(var reason: String) extends Packet[CraftAttach] {
  override def write(out: NiolOutput): Unit = {
    out.putVarstring(reason, UTF_8)
  }
	
  override def obj = DisconnectPacket

	
}
object DisconnectPacket extends PacketObj[CraftAttach, DisconnectPacket] {
  override val id = 26
	
  override def read(in: NiolInput): DisconnectPacket = {
    val reason = in.getVarstring(UTF_8)
    new DisconnectPacket(reason)
  }
}
/** Packet builder auto-generated by DataTractor */
final class DisconnectPacketBuilder[P <: DisconnectPacket] extends PacketBuilder[DisconnectPacket, P =:= Complete] {
  private[this] var reason: String = _

  def withReason(reason: String): DisconnectPacketBuilder[P with Reason] = {
    this.reason = reason
    this.asInstanceOf[DisconnectPacketBuilder[P with Reason]]
  }

  override def build()(implicit evidence: P =:= Complete) = {
    new DisconnectPacket(reason)
  }
}
object DisconnectPacketBuilder {
  sealed trait Reason
  type Complete = DisconnectPacket with Reason
}
