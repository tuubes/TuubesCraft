package org.tuubes.craft.mc1_12.play.serverbound

import com.electronwill.niol.{NiolInput, NiolOutput}
import org.tuubes.core.network._
import ClientStatusPacketBuilder._
import org.tuubes.craft.CraftAttach

/** Packet class auto-generated by DataTractor */
final class ClientStatusPacket(var actionId: Int) extends Packet[CraftAttach] {
  override def write(out: NiolOutput): Unit = {
    out.putVarint(actionId)
  }
	
  override def obj = ClientStatusPacket

	
}
object ClientStatusPacket extends PacketObj[CraftAttach, ClientStatusPacket] {
  override val id = 4
	
  override def read(in: NiolInput): ClientStatusPacket = {
    val actionId = in.getVarint()
    new ClientStatusPacket(actionId)
  }
}
/** Packet builder auto-generated by DataTractor */
final class ClientStatusPacketBuilder[P <: ClientStatusPacket] extends PacketBuilder[ClientStatusPacket, P =:= Complete] {
  private[this] var actionId: Int = _

  def withActionId(actionId: Int): ClientStatusPacketBuilder[P with ActionId] = {
    this.actionId = actionId
    this.asInstanceOf[ClientStatusPacketBuilder[P with ActionId]]
  }

  override def build()(implicit evidence: P =:= Complete) = {
    new ClientStatusPacket(actionId)
  }
}
object ClientStatusPacketBuilder {
  sealed trait ActionId
  type Complete = ClientStatusPacket with ActionId
}
