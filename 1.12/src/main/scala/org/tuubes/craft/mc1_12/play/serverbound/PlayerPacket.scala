package org.tuubes.craft.mc1_12.play.serverbound

import com.electronwill.niol.{NiolInput, NiolOutput}
import org.tuubes.core.network._
import org.tuubes.craft.CraftAttach
import PlayerPacketBuilder._

/** Packet class auto-generated by DataTractor */
final class PlayerPacket(var onGround: Boolean) extends Packet[CraftAttach] {
  override def write(out: NiolOutput): Unit = {
    out.putBoolean(onGround)
  }
	
  override def obj = PlayerPacket

	
}
object PlayerPacket extends PacketObj[CraftAttach, PlayerPacket] {
  override val id = 13
	
  override def read(in: NiolInput): PlayerPacket = {
    val onGround = in.getBoolean()
    new PlayerPacket(onGround)
  }
}
/** Packet builder auto-generated by DataTractor */
final class PlayerPacketBuilder[P <: PlayerPacket] extends PacketBuilder[PlayerPacket, P =:= Complete] {
  private[this] var onGround: Boolean = _

  def withOnGround(onGround: Boolean): PlayerPacketBuilder[P with OnGround] = {
    this.onGround = onGround
    this.asInstanceOf[PlayerPacketBuilder[P with OnGround]]
  }

  override def build()(implicit evidence: P =:= Complete) = {
    new PlayerPacket(onGround)
  }
}
object PlayerPacketBuilder {
  sealed trait OnGround
  type Complete = PlayerPacket with OnGround
}
