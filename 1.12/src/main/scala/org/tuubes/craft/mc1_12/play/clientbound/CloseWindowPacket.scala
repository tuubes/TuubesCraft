package org.tuubes.craft.mc1_12.play.clientbound

import com.electronwill.niol.{NiolInput, NiolOutput}
import org.tuubes.network._

/** Packet class auto-generated by DataTractor */
final class CloseWindowPacket(var windowId: Int) extends Packet {
  override def write(out: NiolOutput): Unit {
    out.putInt(windowId)
  }
	
  override def id = CloseWindowPacket.id

	
}
object CloseWindowPacket extends PacketObj[CloseWindowPacket] {
  override val id = 18
	
  override def read(in: NiolOutput): CloseWindowPacket {
    val windowId = in.getUnsignedByte()
    new CloseWindowPacket(windowId)
  }
}
/** Packet builder auto-generated by DataTractor */
final class CloseWindowPacketBuilder[P <: CloseWindowPacket] extends PacketBuilder[CloseWindowPacket, Complete] {
  private[this] var windowId: Int = _

  def withWindowId(windowId: Int): CloseWindowPacketBuilder[P with WindowId] = {
    this.windowId = windowId
    this.asInstanceOf[CloseWindowPacketBuilder[P with WindowId]]
  }

  override def build()(implicit evidence: P =:= Complete) {
    new CloseWindowPacket(windowId)
  }
}
object CloseWindowPacketBuilder {
  sealed trait WindowId
  type Complete = CloseWindowPacketBuilder with WindowId
}
